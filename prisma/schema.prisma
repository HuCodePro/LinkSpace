generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL")
}


model Session {
  id           String   @id @default(cuid())
  userId       Int      
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}


model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  emailVerified DateTime? // Ce champ pose probl√®me
  password  String
  role      Role     @default(EMPLOYEE)
  companyId Int?
  company   Company? @relation(fields: [companyId], references: [id])
  contracts Contract[] @relation("UserContracts")
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  invoices  Invoice[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             Int       // Change this to Int to match the User model
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  users     User[]
  employees Employee[]
  invoices  Invoice[]
  contracts Contract[] @relation("CompanyContracts")
}

model Employee {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  contracts   Contract[]
  assignments Assignment[]
}

model Contract {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  employeeId  Int
  employee    Employee @relation(fields: [employeeId], references: [id])
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id], name: "CompanyContracts")
  userId      Int?
  user        User?    @relation(fields: [userId], references: [id], name: "UserContracts")
}

model Invoice {
  id          Int      @id @default(autoincrement())
  number      String
  amount      Float
  date        DateTime
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Assignment {
  id          Int      @id @default(autoincrement())
  description String?
  startDate   DateTime
  endDate     DateTime?
  employeeId  Int
  employee    Employee @relation(fields: [employeeId], references: [id])
}

enum Role {
  ADMIN
  EMPLOYEE
  MANAGER
}
